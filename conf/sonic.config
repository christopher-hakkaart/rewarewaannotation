/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for running Nextflow on the UCD Sonic HPC
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Assumes HPC using Slurm schedular, through which all jobs will be submitted
    and run.
----------------------------------------------------------------------------------------
*/

params {
  config_profile_description = 'Sonic HPC cluster profile'
  config_profile_contact     = 'Katie Herron (GitHub: @kherronism)'
  config_profile_url         = 'https://www.ucd.ie/itservices/ourservices/researchit/researchcomputing/sonichpc/'
  max_cpus                   = 44
  max_time                   = '336.h'
  singularity_dir            = '/home/people/22211215/scratch/singularity/'
  schema_ignore_params       = 'singularity_dir'
}

executor {
    queueSize                = 20
    submitRateLimit          = '5 sec'
    jobName                  =  { "$task.hash" }
}

singularity {
    enabled                  = true
    autoMounts               = true
    cacheDir                 = params.singularity_dir
}

process {
    executor                   = 'slurm'
    maxRetries                 = 2
    beforeScript               = 'module load singularity'

    // Adjust default resource allocations
    cpus     = { check_max( 1     * factor(task, 2),  'cpus'   ) }
    time     = { check_max( 24.h  * factor(task, 1),  'time'   ) }

    // Process-specific resource requirements
    withLabel: 'process_single' {
      cpus   = { check_max( 1     * factor(task, 2),  'cpus'   ) }
      time   = { check_max( 4.h  * factor(task, 1),  'time'   ) }
    }
    withLabel: 'process_low' {
      cpus   = { check_max( 2     * factor(task, 2),  'cpus'   ) }
      time   = { check_max( 12.h  * factor(task, 1),  'time'   ) }
    }
    withLabel: 'process_medium' {
      cpus   = { check_max( 8     * factor(task, 2),  'cpus'   ) }
      time   = { check_max( 48.h  * factor(task, 1),  'time'   ) }
    }
    withLabel: 'process_high' {
      cpus   = { check_max( 16    * factor(task, 2),  'cpus'   ) }
      time   = { check_max( 96.h  * factor(task, 1),  'time'   ) }
    }
    withLabel: 'process_long' {
      time   = { check_max( 168.h  * factor(task, 1),  'time'   ) }
    }
}

