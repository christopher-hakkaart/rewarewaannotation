{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/kherronism/rewarewaannotation/master/nextflow_schema.json",
    "title": "kherronism/rewarewaannotation pipeline parameters",
    "description": "genome annotation, originally developed for the annotation of the rewarewa (Knightia excelsa) genome.",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "assembly", "assembly_name", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "schema": "assets/schema_input.json",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
                    "fa_icon": "fas fa-file-csv"
                },
                "assembly": {
                    "type": "string",
                    "fa_icon": "fas fa-dna",
                    "description": "Path to input assembly to be annotated."
                },
                "assembly_name": {
                    "type": "string",
                    "fa_icon": "fas fa-file-signature",
                    "description": "Name of the input assembly to be annotated."
                },
                "busco_lineages": {
                    "type": "string",
                    "default": "eukaryota_odb10",
                    "description": "BUSCO lineage(s) to use for BUSCO analysis.",
                    "help_text": "For multiple lineages, separate with commas (e.g. `--busco_lineages 'eukaryota_odb10,'mammalia_odb10''`)."
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "trimgalore_options": {
            "title": "TrimGalore options",
            "type": "object",
            "description": "Parameters for TrimGalore!",
            "default": "",
            "properties": {
                "extra_trimgalore_args": {
                    "type": "string",
                    "description": "Extra arguments to pass to Trim Galore! command in addition to defaults defined by the pipeline.",
                    "fa_icon": "far fa-hand-scissors"
                },
                "extra_trimgalore_hardtrim_args": {
                    "type": "string",
                    "description": "Arguments to pass to Trim Galore! command for hard-trimming. Required to be specified for hard-trimming of reads.",
                    "fa_icon": "fas fa-hand-scissors"
                }
            },
            "fa_icon": "fas fa-cut"
        },
        "star_options": {
            "title": "STAR options",
            "type": "object",
            "description": "Parameters for STAR commands.",
            "default": "",
            "properties": {
                "extra_star_genomegenerate_args": {
                    "type": "string",
                    "fa_icon": "fas fa-address-book",
                    "description": "Extra arguments to pass to STAR genomeGenerate indexing command in addition to defaults defined by the pipeline."
                },
                "align_reads_together": {
                    "type": "boolean",
                    "default": true,
                    "description": "Align all reads together in a single command, result is a single BAM file rather than a BAM file per sample.",
                    "fa_icon": "fas fa-align-justify"
                },
                "extra_star_align_args": {
                    "type": "string",
                    "fa_icon": "fas fa-align-center",
                    "description": "Extra arguments to pass to star alignment command in addition to defaults defined by the pipeline."
                }
            },
            "fa_icon": "fas fa-star"
        },
        "picard_options": {
            "title": "Picard options",
            "type": "object",
            "description": "Parameters for picard commands.",
            "default": "",
            "properties": {
                "extra_picard_alignment_metrics_args": {
                    "type": "string",
                    "description": "Extra arguments to pass to picard CollectAlignmentSummaryMetrics command in addition to defaults defined by the pipeline.",
                    "fa_icon": "fas fa-bath"
                }
            },
            "fa_icon": "fas fa-truck-pickup"
        },
        "repeatmodeler_options": {
            "title": "RepeatModeler options",
            "type": "object",
            "description": "Parameters for RepeatModeler commands.",
            "default": "",
            "properties": {
                "repeatmodeler_engine": {
                    "type": "string",
                    "enum": ["abblast", "wublast", "ncbi"],
                    "description": "The search engine to use for RepeatModeler.",
                    "fa_icon": "fas fa-american-sign-language-interpreting"
                },
                "extra_repeatmodeler_args": {
                    "type": "string",
                    "description": "Extra arguments to pass to the RepeatModeler command in addition to defaults defined by the pipeline.",
                    "fa_icon": "fas fa-dove"
                }
            },
            "fa_icon": "fas fa-bread-slice"
        },
        "repeatmasker_options": {
            "title": "RepeatMasker options",
            "type": "object",
            "description": "Parameters for RepeatMasker commands.",
            "default": "",
            "properties": {
                "extra_repeatmasker_args": {
                    "type": "string",
                    "description": "Extra arguments to pass to the RepeatMasker command in addition to defaults defined by the pipeline.",
                    "fa_icon": "fas fa-mask"
                }
            },
            "fa_icon": "fas fa-mask"
        },
        "braker_options": {
            "title": "BRAKER options",
            "type": "object",
            "description": "Parameters for BRAKER commands.",
            "default": "",
            "properties": {
                "extra_braker_args": {
                    "type": "string",
                    "description": "Extra arguments to pass to the BRAKER command in addition to defaults defined by the pipeline.",
                    "fa_icon": "fas fa-heart-broken"
                }
            },
            "fa_icon": "fas fa-heart-broken"
        },
        "pipeline_options": {
            "title": "Pipeline options",
            "type": "object",
            "description": "Parameters used to control which parts of the pipeline are run. Not recommended to change these unless you know what you're doing, chances are things will break.",
            "default": "",
            "properties": {
                "skip_fastqc": {
                    "type": "boolean",
                    "description": "Skip FASTQC.",
                    "fa_icon": "fas fa-forward"
                },
                "skip_trimming": {
                    "type": "boolean",
                    "description": "Skip read trimming.",
                    "fa_icon": "fas fa-forward"
                },
                "skip_hard_trimming": {
                    "type": "boolean",
                    "description": "Skip hard-trimming. Requires params.skip_trimming to be false.",
                    "fa_icon": "fas fa-forward"
                },
                "skip_read_alignment": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Skip read alignment, BRAKER will use unaligned reads instead."
                },
                "skip_picard_alignment_metrics": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Skip Picard CollectAlignmentSummaryMetrics."
                },
                "skip_genome_masking": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Skip genome masking."
                },
                "skip_busco_genome": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Skip BUSCO genome assessment."
                },
                "skip_busco_annotation": {
                    "type": "boolean",
                    "description": "Skip BUSCO genome annotation assessment.",
                    "fa_icon": "fas fa-forward"
                },
                "skip_agat_stats": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Skip agat spstatistics."
                }
            },
            "fa_icon": "fas fa-stream"
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fas fa-desktop",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 4,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "schema_ignore_params": {
                    "type": "string",
                    "default": "genomes",
                    "description": "Schema ignore parameters",
                    "hidden": true
                },
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-fish",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "validationShowHiddenParams": {
                    "type": "boolean",
                    "fa_icon": "fas fa-blender",
                    "description": "Show hidden params."
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "null/pipeline_info",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "show_hidden_params": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/trimgalore_options"
        },
        {
            "$ref": "#/definitions/star_options"
        },
        {
            "$ref": "#/definitions/picard_options"
        },
        {
            "$ref": "#/definitions/repeatmodeler_options"
        },
        {
            "$ref": "#/definitions/repeatmasker_options"
        },
        {
            "$ref": "#/definitions/braker_options"
        },
        {
            "$ref": "#/definitions/pipeline_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ]
}
